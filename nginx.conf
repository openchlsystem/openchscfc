# /etc/nginx/nginx.conf (complete file)
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    # Global compression settings
    gzip ${GZIP_ENABLED:-on};
    gzip_types ${GZIP_TYPES:-text/plain text/css application/json application/javascript text/xml};
    gzip_min_length 1000;
    gzip_proxied any;

    # Frontend Server
    server {
        listen ${FRONTEND_PORT:-80};
        server_name ${FRONTEND_DOMAIN:-localhost};
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";
        add_header Referrer-Policy "strict-origin-when-cross-origin";

        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
            
            expires ${FRONTEND_CACHE_CONTROL:-no-store};
            add_header Cache-Control "${FRONTEND_CACHE_HEADER:-no-cache, must-revalidate}";
        }
    }

    # Backend Server
    server {
        listen ${BACKEND_PORT:-8000};
        server_name ${BACKEND_DOMAIN:-backend};
        
        # Security headers
        add_header Content-Security-Policy "default-src 'self'";
        add_header Permissions-Policy "geolocation=(), microphone=()";

        location / {
            proxy_pass http://${BACKEND_SERVICE:-backend}:${BACKEND_PORT:-8006};
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout ${PROXY_TIMEOUT:-300}s;
        }

        location /static/ {
            alias ${STATIC_FILES_PATH:-/app/staticfiles}/;
            expires ${STATIC_CACHE_EXPIRES:-30d};
            access_log off;
        }
    }
}