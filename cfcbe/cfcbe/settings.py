"""
Django settings for cfcbe project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
import warnings
from dotenv import load_dotenv

# Load environment variables from .env file
load_dotenv()

# Suppress FutureWarning from torch.load in Whisper
warnings.filterwarnings("ignore", category=FutureWarning, module="whisper")

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', 'False') == 'True'

ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', '').split(',')

MEDIA_URL = os.getenv('MEDIA_URL', '/uploads/')
MEDIA_ROOT = os.path.join(BASE_DIR, os.getenv('MEDIA_ROOT', 'uploads'))

# Static files configuration
STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # my apps
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders',
    
    

    
    'emailfeedback',
    'django_filters',


    # New Gateway Apps,
    'webhook_handler',
    'platform_adapters',
    'endpoint_integration',
    'shared',
    'feedback',
    'whatsapp',
    'transcription',

    # 'platform_adapters.apps.PlatformAdaptersConfig',
    # 'webhook_handler.apps.WebhookHandlerConfig',
    # 'shared.apps.SharedConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'webhook_handler.middleware.TokenAuthMiddleware',
]

ROOT_URLCONF = 'cfcbe.urls'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}

CORS_ALLOW_ALL_ORIGINS = os.getenv('CORS_ALLOW_ALL_ORIGINS', 'False') == 'True'

CORS_ALLOW_CREDENTIALS = os.getenv('CORS_ALLOW_CREDENTIALS', 'False') == 'True'

CORS_ALLOWED_ORIGINS = os.getenv('CORS_ALLOWED_ORIGINS', '').split(',')

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'cfcbe.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': os.getenv('DB_ENGINE', 'django.db.backends.sqlite3'),
        'NAME': os.path.join(BASE_DIR, os.getenv('DB_NAME', 'db.sqlite3')),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# CORS Headers configuration
CORS_ALLOW_HEADERS = [
    'content-type',
    'authorization',
    'x-requested-with',
    'accept',
    'origin',
    'user-agent',
]

CORS_ALLOW_METHODS = [
    'GET',
    'POST',
    'PUT',
    'PATCH',
    'DELETE',
    'OPTIONS',
]

# Logging configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': os.getenv('LOG_LEVEL', 'INFO'),
    },
}

# Platform configurations
PLATFORM_CONFIGS = {
    'webform': {
        'api_token': os.getenv('PLATFORM_WEBFORM_API_TOKEN')
    },
    'whatsapp': {
        'verify_token': os.getenv('WHATSAPP_VERIFY_TOKEN'),
        'api_token': os.getenv('PLATFORM_WEBFORM_API_TOKEN'),
        'phone_number_id': os.getenv('WHATSAPP_PHONE_NUMBER_ID'),
        'client_id': os.getenv('WHATSAPP_CLIENT_ID'),
        'client_secret': os.getenv('WHATSAPP_CLIENT_SECRET'),
        'business_id': os.getenv('WHATSAPP_BUSINESS_ID'),
        'access_token': os.getenv('WHATSAPP_ACCESS_TOKEN')
    }
}

VERIFICATION_TOKEN = os.getenv('WHATSAPP_VERIFY_TOKEN')

BEARER_TOKEN = os.getenv('PLATFORM_WEBFORM_API_TOKEN')

# WhatsApp API Credentials
WHATSAPP_CLIENT_ID = os.getenv('WHATSAPP_CLIENT_ID')
WHATSAPP_CLIENT_SECRET = os.getenv('WHATSAPP_CLIENT_SECRET')
WHATSAPP_BUSINESS_ID = os.getenv('WHATSAPP_BUSINESS_ID')
WHATSAPP_PHONE_NUMBER_ID = os.getenv('WHATSAPP_PHONE_NUMBER_ID')
WHATSAPP_ACCESS_TOKEN = os.getenv('WHATSAPP_ACCESS_TOKEN')
WHATSAPP_API_URL = os.getenv('WHATSAPP_API_URL')
WHATSAPP_WEBHOOK_VERIFY_TOKEN = os.getenv('WHATSAPP_VERIFY_TOKEN')

# Media Processing Configuration for Helpline Transmission
MEDIA_PROCESSING_CONFIG = {
    'MAX_FILE_SIZE_BYTES': int(os.getenv('MEDIA_MAX_FILE_SIZE', 16 * 1024 * 1024)),  # 16MB default
    'DOWNLOAD_TIMEOUT_SECONDS': int(os.getenv('MEDIA_DOWNLOAD_TIMEOUT', 30)),  # 30 seconds default
    'SUPPORTED_MIME_TYPES': {
        'image/jpeg', 'image/png', 'image/webp',
        'video/mp4', 'video/quicktime',  
        'audio/ogg', 'audio/mpeg', 'audio/mp3',
        'application/pdf', 'text/plain'
    },
    'ENCODING_ENABLED': bool(os.getenv('MEDIA_ENCODING_ENABLED', 'True').lower() in ('true', '1', 'yes')),
    'FALLBACK_TO_URL_ON_ERROR': bool(os.getenv('MEDIA_FALLBACK_TO_URL', 'True').lower() in ('true', '1', 'yes'))
}

# Add to gateway/settings.py

# WhatsApp Chatbot Settings
CHATBOT_SETTINGS = {
    'WELCOME_TIMEOUT_DAYS': 2,  # Restart flow if incomplete after this many days
    'ANALYTICS_ENABLED': True,
    'LOW_LITERACY_SUPPORT': True,  # Enable voice prompts for users who don't respond to text
}

# Maternal Health Chatbot Configuration
MISTRAL_API_ENDPOINT = os.getenv('MISTRAL_API_ENDPOINT')
# Optional additional settings
CHATBOT_USER_DATA_TTL = 86400  # Session timeout in seconds (24 hours)
CHATBOT_DEFAULT_LANGUAGE = 'en'  # Default language for new users
# AI Service Configuration
  # Update with your actual Mistral endpoint
AI_ENDPOINT = os.getenv('AI_ENDPOINT') # Update with your actual Mistral endpoint
AI_MODEL = 'mistral'
AI_TIMEOUT = 10  # seconds

# Message Templates
MESSAGE_TEMPLATES = {
    'en': {
        'welcome': """
üëã *Welcome to MamaCare!*  

We're your free pregnancy & postpartum companion. To get started:  

1. Are you currently pregnant or postpartum?  
   Reply:  
   1Ô∏è‚É£ *Pregnant*  
   2Ô∏è‚É£ *Postpartum*  

2. Choose language:  
   üåç *1-English*  |  *2-Swahili*  |  *3-Sheng*  

*Tip:* You can change settings anytime by texting SETTINGS.
""",
        'opt_out': "*To stop messages:* Reply STOP\nData privacy: We never share your number."
    },
    'sw': {
        'welcome': """
üëã *Karibu kwa MamaCare!*  

Tunaweza kukusaidia kwa:

- Ufuatiliaji wa ujauzito  
- Ukumbusho wa kliniki  
- Maswali ya afya  

Jibu:  
1Ô∏è‚É£ *Nina mimba*  
2Ô∏è‚É£ *Nimeshapata mtoto*  

Chagua lugha:  
üåç *1-Kiingereza*  |  *2-Kiswahili*  |  *3-Sheng*  

*Mwongozo:* Unaweza kubadilisha mipangilio kwa kutuma SETTINGS.
""",
        'opt_out': "*Kusimamisha ujumbe:* Jibu STOP\nFaragha ya data: Hatushiriki nambari yako kamwe."
    }
}


ENDPOINT_AUTH_TOKEN = os.getenv('ENDPOINT_AUTH_TOKEN')


ENDPOINT_CONFIG = {
    'cases_endpoint': {
        'url': os.getenv('ENDPOINT_CASES_URL'),
        'auth_token': os.getenv('ENDPOINT_AUTH_TOKEN'),
        'formatter': 'cases'
    },
    'messaging_endpoint': {
        'url': os.getenv('ENDPOINT_MESSAGING_URL'),
        'auth_token': os.getenv('ENDPOINT_AUTH_TOKEN'),
        'formatter': 'messaging'
    },
        'ceemis': {
        'url': os.getenv('ENDPOINT_CEEMIS_URL'),
        'format': 'form',  # CEEMIS expects form data
        'auth_type': 'none',  # No authentication for this endpoint
    },
        'ceemis_update': {
        'url': os.getenv('ENDPOINT_CEEMIS_UPDATE_URL'),
        'format': 'form',  # CEEMIS expects form data
        'auth_type': 'none',  # No authentication for this endpoint
    }
}

# Email settings for OTP verification
EMAIL_BACKEND = os.getenv('EMAIL_BACKEND')
EMAIL_HOST = os.getenv('EMAIL_HOST')
EMAIL_PORT = int(os.getenv('EMAIL_PORT', 587))
EMAIL_USE_TLS = os.getenv('EMAIL_USE_TLS', 'True') == 'True'
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = os.getenv('DEFAULT_FROM_EMAIL')

# CPIMS Configuration
CPIMS_ENDPOINT_URL = os.getenv('CPIMS_ENDPOINT_URL', 'https://test.cpims.net/api/v1/crs/')
CPIMS_AUTH_TOKEN = os.getenv('CPIMS_AUTH_TOKEN', '')

# SSL Configuration
DISABLE_SSL_VERIFICATION = os.getenv('DISABLE_SSL_VERIFICATION', 'False').lower() in ('true', '1', 'yes')